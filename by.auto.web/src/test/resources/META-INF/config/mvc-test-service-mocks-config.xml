<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <import resource="mvc-test-repository-mocks-config.xml"/>

    <context:property-placeholder order="1"
                                  location="classpath:/META-INF/config/services.properties"
                                  ignore-unresolvable="true" system-properties-mode="NEVER"/>

    <bean id="accountService" class="org.mockito.Mockito" factory-method="mock"
          depends-on="accountRepository, generatedTokenRepository">
        <constructor-arg value="by.auto.service.AccountService"/>
    </bean>

    <bean id="emailSenderInterceptor" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="by.auto.service.email.EmailSenderInterceptor"/>
    </bean>

    <bean id="textEmailHandler" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="by.auto.service.email.TextEmailHandler"/>
    </bean>

    <bean id="templateMessageSource" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.springframework.context.support.ReloadableResourceBundleMessageSource"/>
    </bean>

    <bean id="freemarkerConfig" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="freemarker.template.Configuration"/>
    </bean>

    <bean id="servicesProperties" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="java.util.Properties"/>
    </bean>

    <bean id="freemarkerTemplateProcessor" class="org.mockito.Mockito" factory-method="mock"
            depends-on="freemarkerConfig, templateMessageSource,servicesProperties">
        <constructor-arg value="by.auto.service.template.FreemarkerTemplateProcessor"/>
    </bean>

    <bean id="templateEmailHandler" class="org.mockito.Mockito" factory-method="mock"
          depends-on="freemarkerTemplateProcessor, templateMessageSource">
        <constructor-arg value="by.auto.service.email.TemplateEmailHandler"/>
    </bean>

    <bean id="mailSender" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.springframework.mail.javamail.JavaMailSenderImpl"/>
    </bean>

    <bean id="emailSender" class="org.mockito.Mockito" factory-method="mock"
          depends-on="emailSenderInterceptor, mailSenderWrapper, jmsMessageSender">
        <constructor-arg value="by.auto.service.email.EmailSender"/>
    </bean>

    <bean id="mailSenderWrapper" class="org.mockito.Mockito" factory-method="mock"
          depends-on="mailSender">
        <constructor-arg value="by.auto.service.email.JavaMailSenderWrapper"/>
    </bean>

    <bean id="jmsMessageSender" class="org.mockito.Mockito" factory-method="mock"
            depends-on="emailOutChannel">
        <constructor-arg value="by.auto.service.messaging.JmsMessageSender"/>
    </bean>

    <bean id="emailOutChannel" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="org.springframework.messaging.MessageChannel"/>
    </bean>

    <bean id="pdfService" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="by.auto.service.pdf.PdfService"/>
    </bean>

    <bean id="authenticationService" class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="by.auto.service.security.AuthenticationService"/>
    </bean>

    <bean id="objectService" class="org.mockito.Mockito" factory-method="mock"
          depends-on="companyRepository, userRepository">
        <constructor-arg value="by.auto.service.util.ObjectService"/>
    </bean>
</beans>