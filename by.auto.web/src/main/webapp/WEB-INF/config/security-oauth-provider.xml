<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/security/oauth http://www.springframework.org/schema/security/spring-security-oauth.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!--  ==============================  -->
	<!--  OAUTH 2 : AUTHORIZATION SERVER  -->
	<!--  ==============================  -->
	<oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
    <!--<bean id="tokenStore" class="OAuth2RepositoryTokenStore"/> -->

	<!-- The following 3 elements exist solely to support parameter-based client authentication, which is
	     discouraged by the OAuth2 spec. At this time, not all OAuth2 client implementations support
	     HTTP Basic client authentication. Therefore, these are included to allow the client to use
	     either form of client authentication. We may consider removing these in the future, however,
	     when HTTP Basic client authentication is fully supported across all client implementations. -->
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>
	
	<bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>
	
	<!-- End of configuration to support parameter-based client authentication -->
	
	

	<!--  =========================  -->
	<!--  OAUTH 2 : RESOURCE SERVER  -->
	<!--  =========================  -->
	<oauth:resource-server id="resourceServerFilter" resource-id="nevedaiApi" token-services-ref="tokenServices" />


	<!--  ======================  -->
	<!--  OAUTH 2 : SHARED BEANS  -->
	<!--  ======================  -->
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="clientDetails"/>
		<property name="accessTokenValiditySeconds" value="604800" /> <!-- 1 week -->
	</bean>

</beans>